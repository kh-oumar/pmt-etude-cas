name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  backend:
    name: Build, test & push backend Docker image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Debug backend directory structure
        run: |
          echo "Current directory: $(pwd)"
          echo "Listing contents of pmt-backend:"
          ls -laR pmt-backend

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build and run tests for backend
        working-directory: pmt-backend
        run: mvn clean package

      - name: Debug target folder in backend
        working-directory: pmt-backend
        run: ls -la target

      - name: Build backend Docker image
        # Utiliser "pmt-backend" comme contexte pour que COPY target/... fonctionne
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/projet-backend:latest -f pmt-backend/Dockerfile pmt-backend

      - name: Login to Docker Hub (backend)
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Push backend image to Docker Hub
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/projet-backend:latest

  frontend:
    name: Build, test & push frontend Docker image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Debug frontend directory structure
        run: |
          echo "Current directory: $(pwd)"
          echo "Listing contents of pmt-frontend:"
          ls -laR pmt-frontend

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'

      - name: Install dependencies and run frontend tests
        working-directory: pmt-frontend
        run: |
          echo "Current frontend folder:"
          ls -la
          npm install
          npm run test -- --clearCache

      - name: Build frontend in production mode
        working-directory: pmt-frontend
        run: npm run build -- --project pmt-frontend --configuration production

      - name: Build frontend Docker image
        # Utiliser "pmt-frontend" comme contexte pour que Dockerfile trouve les fichiers correspondants
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/projet-frontend:latest -f pmt-frontend/Dockerfile pmt-frontend

      - name: Login to Docker Hub (frontend)
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Push frontend image to Docker Hub
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/projet-frontend:latest
